#include <iostream>
#include <time.h>

using namespace std;

void random_numbers(int arr[], int n)
{
    srand(time(0));

    for (int i = 0; i < n; i++)
        arr[i] = rand() % 10000;
}

int sf = 0;
int mf = 0;

void merge(int arr[], int l, int m, int r)
{
    int n1 = m - l + 1;
    int n2 = r - m;

    int* L = new int[n1];
    int* R = new int[n2];

    for (int i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];

    int i = 0;
    int j = 0;
    int k = l;

    while (i < n1 && j < n2) {
        sf++;
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        }
        else {
            arr[k] = R[j];
            j++;
        }
        mf++;
        k++;
    }

    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
        mf++;
    }

    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
        mf++;
    }

    delete[] L;
    delete[] R;
}

void mergeSort(int arr[], int l, int r)
{
    if (l >= r) {
        return;
    }

    int m = l + (r - l) / 2;
    mergeSort(arr, l, m);
    mergeSort(arr, m + 1, r);
    merge(arr, l, m, r);
}

int main()
{
    clock_t start, end;
    int n;

    cout << "Enter array size: ";
    cin >> n;

    int* arr = new int[n];


    start = clock();
    random_numbers(arr, n);
    mergeSort(arr, 0, n - 1);
    cout << "Sorted array: " << endl;
    for (int i = 0; i < n; i++)
    {
        cout << arr[i] << " ";
    }
    cout << "\n \nMF = " << mf << endl;
    cout << "\nSF = " << sf << endl;
    cout << "\nMF + SF = " << mf + sf << endl;
    end = clock();
    printf("\nTime taken %4f sec ", ((double)end - start) / ((double)CLOCKS_PER_SEC));
    delete[] arr;
    return 0;
}
